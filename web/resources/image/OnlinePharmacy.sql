-- MySQL Script generated by MySQL Workbench
-- Sat Jul 15 20:44:34 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Online_Pharmacy
-- -----------------------------------------------------
-- Онлайн-аптека.
-- Клиент выбирает припарат из списка ему доступных.Заполняет форму заказа, указывая количество и дозировку.Клиент оплачивает заказ. Фармацевт (Администратор) управляет списком препаратов. Часть препаратов требует электронного рецепта, который может назначить Клиенту только врач. Клиент может сделать запрос врачу на продление рецепта.
-- Фармацевт проверяет при  необходимости наличие электронного рецепта у клиента.

-- -----------------------------------------------------
-- Schema Online_Pharmacy
--
-- Онлайн-аптека.
-- Клиент выбирает припарат из списка ему доступных.Заполняет форму заказа, указывая количество и дозировку.Клиент оплачивает заказ. Фармацевт (Администратор) управляет списком препаратов. Часть препаратов требует электронного рецепта, который может назначить Клиенту только врач. Клиент может сделать запрос врачу на продление рецепта.
-- Фармацевт проверяет при  необходимости наличие электронного рецепта у клиента.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Online_Pharmacy` DEFAULT CHARACTER SET utf8 ;
USE `Online_Pharmacy` ;

-- -----------------------------------------------------
-- Table `Online_Pharmacy`.`city`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`city` (
  `id` TINYINT NOT NULL AUTO_INCREMENT COMMENT 'Искусственый id',
  `city` VARCHAR(30) NULL COMMENT 'города- вводиться при регистрации, использоваться будет для состовления  статистки продаж по городам и дальнейшего анализа.\nВводится при регистрации. \nИСПОЛЬЗУЕТСЯ В ТАБЛИЦЕ CLIENT\n',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = ' таблица городов';


-- -----------------------------------------------------
-- Table `Online_Pharmacy`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`user` (
  `id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Искусственый id, выбрал smallint так как клиентов аптеки теоретически должно быть много (65535 должно хватить).',
  `login` VARCHAR(30) NULL COMMENT 'логин-заполняется при регистрации\nразмер varchar так как возможны плавающие размерности',
  `password` VARCHAR(50) NULL COMMENT ' пароль--заполняется при регистрации\nvarchar так как возможны плавающие размерности. размерность 50 так как будет применяться кодировка',
  `email` VARCHAR(50) NULL COMMENT 'электронная почта-используется для дальнейшей рассылки различной информации (акции и т.д)',
  `sex` ENUM('MALE', 'FAMALE') NULL,
  `name` VARCHAR(30) NULL COMMENT ' имя-заполняется при регистрации\nvarchar так как возможны плавающие размерности',
  `surname` VARCHAR(30) NULL COMMENT ' фамилия-заполняется при регистрации\nvarchar так как возможны плавающие размерности',
  `birth_date` DATE NULL,
  `electrone_recipe` CHAR(16) NULL COMMENT ' Номер рецепта выдается в поликлинике, состоит из 16 цифр штрихкода.\nбудем хранить в виде экономии как строку. (вместо BiGInt)',
  `role` ENUM('USER', 'ADMIN', 'GUEST') NULL COMMENT 'роль пользователя в приложении\n\n',
  `city_id` TINYINT NULL COMMENT 'Город  -вторичный ключ для city.id\nвводиться при регистрации, использоваться будет для состовления  статистки продаж по городам и дальнейшего анализа.\nВыбирается при регистрации.\n',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `cityFK_idx` (`city_id` ASC),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  UNIQUE INDEX `electrone_recipe_UNIQUE` (`electrone_recipe` ASC),
  CONSTRAINT `cityFK`
    FOREIGN KEY (`city_id`)
    REFERENCES `Online_Pharmacy`.`city` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Таблица Client-изначально заполняется при регистрации нового пользователя. ';


-- -----------------------------------------------------
-- Table `Online_Pharmacy`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`country` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Искусственый id',
  `country` VARCHAR(30) NULL COMMENT 'Стана производства -30 символов будет достаточнно.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'таблица стран';


-- -----------------------------------------------------
-- Table `Online_Pharmacy`.`medicament_inf`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`medicament_inf` (
  `id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Искусственый id, выбрал smallint так как наименований лекарств  должно быть много (65535 должно хватить).',
  `name` VARCHAR(45) NULL COMMENT 'Наименование лекарств\nвторичный ключ связь с medicament.name',
  `dosage` VARCHAR(20) NULL COMMENT 'Дозировка лекарственных препаратов. вторичный ключ связь с dosage.id',
  `count` SMALLINT(2000) UNSIGNED NULL COMMENT 'Количество в наличие 2000 для онлайн аптеки будет достаточно (даже ходовой позиции в нашей стране баярышника).',
  `country_id` TINYINT UNSIGNED NULL COMMENT 'Стана производства\nвторичный ключ связь с country.id',
  `price` DECIMAL(6,2) NULL COMMENT 'цена (1232,45 ) 1232 р 45 коп (большая размерность не к чему)',
  `recipe` ENUM('0', '1') NULL COMMENT 'Необходимость рецепта 0-нет, 1-да\n',
  PRIMARY KEY (`id`),
  INDEX `countryFK_idx` (`country_id` ASC),
  CONSTRAINT `countryFK`
    FOREIGN KEY (`country_id`)
    REFERENCES `Online_Pharmacy`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Таблица описывает основные характеристики лекарственных средств:\nнаименование, дозировка, количество( наличие), страна производства, производитель, цена, электронный рецепт (его необходиость). ';


-- -----------------------------------------------------
-- Table `Online_Pharmacy`.`buy_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`buy_history` (
  `id` MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Искусственый id, выбрал mediumint так как покупок предпалагаю будет очень много  .Старые данные удалять со временем  и ставить меньший тип не вижу смысла. Вдруг надо будет делать анализ за 10 лет.',
  `user_id` SMALLINT UNSIGNED NULL COMMENT 'вторичный ключ для Клиента связьтаблица client.id\n',
  `medicament_id` SMALLINT UNSIGNED NULL COMMENT 'наименование лекарства вторичный ключ связь таблица medicament.id',
  `date` DATETIME NULL COMMENT 'время и дата покупки. Время опять же нужно для анализа покупок. поэтому и выбрал этот тип.',
  `count` TINYINT(120) UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `clientFK_idx` (`user_id` ASC),
  INDEX `medicamentFK_idx` (`medicament_id` ASC),
  CONSTRAINT `clientFK`
    FOREIGN KEY (`user_id`)
    REFERENCES `Online_Pharmacy`.`user` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `medicamentFK`
    FOREIGN KEY (`medicament_id`)
    REFERENCES `Online_Pharmacy`.`medicament_inf` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'История покупок- информация из таблицы может быть получена клиентом(по своим покупкам), так же необходимый анализ может провести администратор (при необходимости). ';


-- -----------------------------------------------------
-- Table `Online_Pharmacy`.`factory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`factory` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Искусственый id',
  `factory` VARCHAR(45) NULL COMMENT 'наименование завода (фирма)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'таблица производителей';


-- -----------------------------------------------------
-- Table `Online_Pharmacy`.`written_recipe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`written_recipe` (
  `id` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Искусственый id',
  `e_recipe` CHAR(16) NULL COMMENT 'Номер рецепта выдается в поликлинике, состоит из 16 цифр штрихкода.\nбудем хранить в виде экономии как строку. (вместо BiGInt)',
  `medicament_id` SMALLINT UNSIGNED NULL COMMENT 'наименование лекарства\n',
  `date` DATE NULL COMMENT 'дата окончания рецепта',
  PRIMARY KEY (`id`),
  INDEX `medicamentFC_idx` (`medicament_id` ASC),
  CONSTRAINT `medicamentFC`
    FOREIGN KEY (`medicament_id`)
    REFERENCES `Online_Pharmacy`.`medicament_inf` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'список выписаных рецептов, используется для проверки при продаже клиенту(проверяем номер карточки и препарат).Каждый день не актуальные по дате рецепты должны удаляться, а новые добавляться (происходит полная загрузка их таблицы в нашу -импорт нужных нам столбцов) грубо говоря, как в некоторых торговых компаниях  заливают каждый день новый прайс от поставщика, так и здесь доложна происходить заливка актуальной нам инфы по рецептам от министерства здравоохранения.\nДанная таблица без связей, так как она должна получать информацию извне. Далее мы должны сравнивать как регулярное выражение соответствие электронного номера карточки (с номером который вводит клиент при регистрации) и препарат (наличие у клиента рецепта именно на данный препарат).';

USE `Online_Pharmacy` ;

-- -----------------------------------------------------
-- Placeholder table for view `Online_Pharmacy`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Online_Pharmacy`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `Online_Pharmacy`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Online_Pharmacy`.`view1`;
USE `Online_Pharmacy`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
